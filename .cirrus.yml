env:
  CIRRUS_CLONE_DEPTH: "1"
  CIRRUS_SHELL: bash

  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  BURGR_URL: VAULT[development/kv/data/burgr data.url]
  BURGR_USERNAME: VAULT[development/kv/data/burgr data.cirrus_username]
  BURGR_PASSWORD: VAULT[development/kv/data/burgr data.cirrus_password]
  SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
  SONAR_TOKEN: VAULT[development/kv/data/next data.token]
  GRADLE_VERSION: "7.6"

auto_cancellation: $CIRRUS_BRANCH != $CIRRUS_DEFAULT_BRANCH

only_if_with_nightly: &ONLY_IF
  skip: "changesIncludeOnly('*.txt', '**/README.md')"
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == ""

only_pr_and_maintained_branches: &ONLY_PR_AND_MAINTAINED_BRANCHES
  skip: "changesIncludeOnly('*.txt', '**/README.md')"
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && $CIRRUS_BUILD_SOURCE != "cron"
    && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

only_main_branches: &ONLY_MAIN_BRANCHES
  skip: "changesIncludeOnly('*.txt', '**/README.md')"
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_BRANCH =~ "branch-.*")

eks_container: &CONTAINER_DEFINITION
  image: ${CIRRUS_AWS_ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/base:j11-g7-latest
  region: eu-central-1
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  namespace: default
  cpu: 4
  memory: 8G

eks_builder_container: &BUILDER_CONTAINER_DEFINITION
  <<: *CONTAINER_DEFINITION
  dockerfile: .cirrus/Dockerfile
  docker_arguments:
    CIRRUS_AWS_ACCOUNT: ${CIRRUS_AWS_ACCOUNT}
    JDK_VERSION: ${JDK_VERSION}
  builder_role: cirrus-builder
  builder_image: docker-builder-v*
  builder_instance_type: t2.small
  builder_subnet_id: ${CIRRUS_AWS_SUBNET}

ec2_instance: &WINVM_DEFINITION
  experimental: true
  image: base-windows-jdk17-v*
  platform: windows
  region: eu-central-1
  subnet_id: ${CIRRUS_AWS_SUBNET}
  type: t3.xlarge

setup_gradle_cache_template: &SETUP_GRADLE_CACHE
  gradle_cache:
    folder: ~/.gradle/caches
    fingerprint_script:
      - echo $CIRRUS_OS
      - cat **/*.gradle* **/gradle-wrapper.properties || true
    populate_script:
      - mkdir -p ~/.gradle/caches

cleanup_gradle_cache_script_template: &CLEANUP_GRADLE_CACHE_SCRIPT
  cleanup_gradle_script: |
    rm -rf ~/.gradle/caches/$GRADLE_VERSION/
    rm -rf ~/.gradle/daemon/
    rm -rf ~/.gradle/caches/transforms-*
    rm -rf ~/.gradle/caches/journal-*
    /usr/bin/find ~/.gradle/caches/ -name "*.lock" -type f -delete

build_task:
  #  name: "Build and stage to repox"
  <<: *ONLY_IF
  eks_container:
    <<: *CONTAINER_DEFINITION
  env:
    ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa
    ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
    ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
    ORG_GRADLE_PROJECT_signingKey: VAULT[development/kv/data/sign data.key]
    ORG_GRADLE_PROJECT_signingPassword: VAULT[development/kv/data/sign data.passphrase]
    ORG_GRADLE_PROJECT_signingKeyId: VAULT[development/kv/data/sign data.key_id]
  <<: *SETUP_GRADLE_CACHE
  build_script: |
    source cirrus-env BUILD-PRIVATE
    source .cirrus/use-gradle-wrapper.sh
    source .cirrus/set_gradle_build_version
    regular_gradle_build_deploy_analyze -x build -x sonarqube :buildPlugin :cyclonedxBom
  <<: *CLEANUP_GRADLE_CACHE_SCRIPT

promote_task:
  depends_on:
    - build
  <<: *ONLY_PR_AND_MAINTAINED_BRANCHES
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 3
    memory: 2G
  env:
    GCF_ACCESS_TOKEN: VAULT[development/kv/data/promote data.token]
    PROMOTE_URL: VAULT[development/kv/data/promote data.url]
    GITHUB_TOKEN: VAULT[development/github/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promotion token]
    # artifacts which will have downloadable links in burgr
    ARTIFACTS: org.sonarsource.sonarlint.intellij:sonarlint-intellij:zip
  <<: *SETUP_GRADLE_CACHE
  promote_script: |
    source .cirrus/use-gradle-wrapper.sh
    .cirrus/cirrus_promote_gradle
  <<: *CLEANUP_GRADLE_CACHE_SCRIPT

dogfood_task:
  #  name: "Update internal dogfooding plugin repo"
  #  alias: "update_dogfood_repo"
  depends_on:
    - promote
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == ""
  eks_container:
    <<: *BUILDER_CONTAINER_DEFINITION
    cpu: 2
    memory: 1G
  env:
    ARTIFACTORY_API_USER: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter
    ARTIFACTORY_API_KEY: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]
    JDK_VERSION: "17"
  dogfood_script: |
    source cirrus-env QA
    pip3 install requests
    python3 .cirrus/dogfood.py
