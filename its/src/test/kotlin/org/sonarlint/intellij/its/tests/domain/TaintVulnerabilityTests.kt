package org.sonarlint.intellij.its.tests.domain

import com.intellij.remoterobot.RemoteRobot
import org.assertj.core.api.Assertions
import org.sonarlint.intellij.its.fixtures.idea
import org.sonarlint.intellij.its.fixtures.tool.window.toolWindow
import org.sonarlint.intellij.its.tests.AllUiTests.Companion.ORCHESTRATOR
import org.sonarlint.intellij.its.tests.AllUiTests.Companion.TAINT_VULNERABILITY_PROJECT_KEY
import org.sonarlint.intellij.its.tests.AllUiTests.Companion.token
import org.sonarlint.intellij.its.utils.ProjectBindingUtils.Companion.bindProjectToSonarQube

class TaintVulnerabilityTests {

    companion object {
        fun verifyTaintTabContainsMessages(remoteRobot: RemoteRobot, vararg expectedMessages: String) {
            with(remoteRobot) {
                idea {
                    toolWindow("SonarLint") {
                        ensureOpen()
                        tabTitleContains("Taint Vulnerabilities") { select() }
                        content("TaintVulnerabilitiesPanel") {
                            expectedMessages.forEach {
                                Assertions.assertThat(hasText(it)).isTrue()
                            }
                        }
                    }
                }
            }
        }

        fun bindProjectFromTaintPanel(remoteRobot: RemoteRobot) {
            with(remoteRobot) {
                idea {
                    toolWindow("SonarLint") {
                        ensureOpen()
                        tab("Taint Vulnerabilities") { select() }
                        content("TaintVulnerabilitiesPanel") {
                            findText("Configure Binding").click()
                        }
                    }
                    bindProjectToSonarQube(
                        remoteRobot,
                        ORCHESTRATOR.server.url,
                        token,
                        TAINT_VULNERABILITY_PROJECT_KEY
                    )
                }
            }
        }
    }

}
